#!/usr/bin/env python3

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################################
# Bigtop smoke test template
#
# This provides basic Bigtop smoke test capabilities. This should be modified
# as needed for individual charms. Specifically, you should determine what
# outcome is considered "succesful" and what warrants a "failure", and set
# the action outcome/output as appropriate.
################################################################################
import sys
sys.path.append('lib')

from charmhelpers.core import hookenv
from charms import layer
from charms.layer.apache_bigtop_base import Bigtop
from charms.reactive import is_state


def fail(msg, output):
    hookenv.action_set({'output': output})
    hookenv.action_fail(msg)
    sys.exit()

if not is_state('bigtop.available'):
    fail('Bigtop is not yet ready')

cfg = layer.options('apache-bigtop-base')
smoke_components = cfg.get('bigtop_smoketest_components')
smoke_configs = cfg.get('bigtop_smoketest_configs')
if not smoke_components:
    fail('No bigtop_smoketest_components found for this charm')

bigtop = Bigtop()
result = bigtop.run_smoke_tests(smoke_components, smoke_configs)
if result == 'success':
    hookenv.action_set({'outcome': result})
else:
    fail('failed smoke testing: %s' % smoke_components, result)
